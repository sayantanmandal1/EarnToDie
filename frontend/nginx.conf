worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Basic Settings
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    server_tokens off;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=assets:10m rate=50r/s;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;

    # Security Headers (applied globally)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

    # CDN and Caching Configuration
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  1h;
        text/css                   1y;
        application/javascript     1y;
        ~image/                    1y;
        ~font/                     1y;
        ~audio/                    1y;
        application/json           1h;
    }

    server {
        listen       80;
        server_name  localhost;

        root   /usr/share/nginx/html;
        index  index.html index.htm;

        # Security
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; media-src 'self' https:; object-src 'none'; frame-ancestors 'none';" always;

        # Handle client-side routing
        location / {
            try_files $uri $uri/ /index.html;
            expires $expires;
            
            # CORS headers for API requests
            add_header Access-Control-Allow-Origin "https://zombiecargame.com" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With" always;
        }

        # Static assets with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Enable CORS for fonts and assets
            add_header Access-Control-Allow-Origin "*";
            
            # Apply rate limiting
            limit_req zone=assets burst=20 nodelay;
            
            # Try to serve from CDN first (if configured)
            try_files $uri @cdn_fallback;
        }

        # Game assets (models, audio, textures)
        location ~* \.(gltf|glb|obj|mtl|fbx|mp3|wav|ogg|m4a)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Enable CORS for game assets
            add_header Access-Control-Allow-Origin "*";
            
            # Apply rate limiting
            limit_req zone=assets burst=10 nodelay;
            
            # Try to serve from CDN first (if configured)
            try_files $uri @cdn_fallback;
        }

        # API proxy (if needed)
        location /api/ {
            proxy_pass http://backend:8080/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Apply rate limiting
            limit_req zone=api burst=20 nodelay;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # CDN fallback location
        location @cdn_fallback {
            # If CDN is configured, try to fetch from CDN
            # This would be configured based on your CDN provider
            return 404;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Deny access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # CDN Origin Server Configuration (if serving as CDN origin)
    server {
        listen 8081;
        server_name cdn.localhost;

        root /usr/share/nginx/html;

        # Only serve static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot|gltf|glb|obj|mtl|fbx|mp3|wav|ogg|m4a)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            add_header Access-Control-Allow-Origin "*";
            
            # Add CDN-specific headers
            add_header X-CDN-Cache "HIT";
            add_header X-Served-By "nginx-origin";
        }

        # Deny everything else
        location / {
            return 404;
        }
    }
}