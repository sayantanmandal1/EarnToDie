# Fluentd Configuration for Zombie Car Game Logging

<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

# Backend application logs
<source>
  @type tail
  path /var/log/zombie-car-backend/*.log
  pos_file /var/log/fluentd/backend.log.pos
  tag backend.app
  format json
  time_key timestamp
  time_format %Y-%m-%dT%H:%M:%S.%L%z
</source>

# Nginx access logs
<source>
  @type tail
  path /var/log/nginx/access.log
  pos_file /var/log/fluentd/nginx-access.log.pos
  tag nginx.access
  format nginx
</source>

# Nginx error logs
<source>
  @type tail
  path /var/log/nginx/error.log
  pos_file /var/log/fluentd/nginx-error.log.pos
  tag nginx.error
  format /^(?<time>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?<log_level>\w+)\] (?<pid>\d+).(?<tid>\d+): (?<message>.*)$/
</source>

# PostgreSQL logs
<source>
  @type tail
  path /var/log/postgresql/*.log
  pos_file /var/log/fluentd/postgresql.log.pos
  tag postgresql.app
  format /^(?<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3} \w+) \[(?<pid>\d+)\]: \[(?<line_num>\d+)-(?<session_id>\w+)\] (?<user>\w+)@(?<database>\w+) (?<log_level>\w+): (?<message>.*)$/
</source>

# Game-specific event logs
<filter backend.app>
  @type parser
  key_name message
  reserve_data true
  <parse>
    @type json
  </parse>
</filter>

# Add environment and service tags
<filter **>
  @type record_transformer
  <record>
    environment "#{ENV['ENVIRONMENT'] || 'production'}"
    service_name "zombie-car-game"
    hostname "#{Socket.gethostname}"
  </record>
</filter>

# Game metrics extraction
<filter backend.app>
  @type grep
  <regexp>
    key event_type
    pattern ^(player_login|game_start|game_end|level_complete|purchase|error)$
  </regexp>
</filter>

# Error log aggregation
<match *.error>
  @type copy
  <store>
    @type elasticsearch
    host elasticsearch
    port 9200
    index_name error-logs
    type_name error
    include_tag_key true
    tag_key @log_name
    flush_interval 10s
  </store>
  <store>
    @type slack
    webhook_url "#{ENV['SLACK_WEBHOOK_URL']}"
    channel "#alerts"
    username "FluentD"
    color danger
    message "Error in %s: %s"
    message_keys tag,message
    flush_interval 60s
  </store>
</match>

# Application logs to Elasticsearch
<match backend.app>
  @type elasticsearch
  host elasticsearch
  port 9200
  index_name app-logs
  type_name app
  include_tag_key true
  tag_key @log_name
  flush_interval 10s
  <buffer>
    @type file
    path /var/log/fluentd/buffer/app
    flush_mode interval
    flush_interval 10s
    chunk_limit_size 10MB
    queue_limit_length 32
    retry_max_interval 30
    retry_forever true
  </buffer>
</match>

# Nginx logs to Elasticsearch
<match nginx.**>
  @type elasticsearch
  host elasticsearch
  port 9200
  index_name nginx-logs
  type_name nginx
  include_tag_key true
  tag_key @log_name
  flush_interval 30s
</match>

# Database logs to Elasticsearch
<match postgresql.**>
  @type elasticsearch
  host elasticsearch
  port 9200
  index_name db-logs
  type_name postgresql
  include_tag_key true
  tag_key @log_name
  flush_interval 30s
</match>

# Catch-all for other logs
<match **>
  @type elasticsearch
  host elasticsearch
  port 9200
  index_name misc-logs
  type_name misc
  include_tag_key true
  tag_key @log_name
  flush_interval 60s
</match>